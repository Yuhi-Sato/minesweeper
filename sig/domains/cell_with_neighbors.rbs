# Generated from domains/cell_with_neighbors.rb with RBS::Inline

module Domains
  # @rbs inherits Base
  class CellWithNeighbors < Base
    extend Forwardable

    @base: Cell

    @neighbors: Array[CellWithNeighbors]

    @neighbor_bomb_cell_count: Integer

    attr_reader neighbor_bomb_cell_count: Integer

    # @rbs (base: Cell, ?neighbors: Array[CellWithNeighbors]) -> void
    def initialize: (base: Cell, ?neighbors: Array[CellWithNeighbors]) -> void

    def bomb?: () -> bool

    def empty?: () -> bool

    def flag?: () -> bool

    def revealed?: () -> bool

    def toggle_flag: () -> void

    def reveal: () -> void

    # @rbs () -> Array[CellWithNeighbors]
    def neighbors: () -> Array[CellWithNeighbors]

    # @rbs (neighbor: CellWithNeighbors) -> void
    def add_neighbor: (neighbor: CellWithNeighbors) -> void

    # @rbs () -> void
    def reveal_with_neighbors: () -> void

    # @rbs () -> Integer
    def count_revealed_cell: () -> Integer

    private

    # @rbs () -> Integer
    def count_neighbor_bomb_cell: () -> Integer
  end
end
