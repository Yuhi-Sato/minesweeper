# Generated from domains/grid_cells.rb with RBS::Inline

# frozen_string_literal: true
# rbs_inline: enabled
module Domains
  # @rbs inherits Base
  class GridCells < Base
    @cells: Array[Array[CellWithNeighbors]]

    @num_empties: Integer

    attr_reader num_empties: Integer

    # @rbs (cells: Array[Array[CellWithNeighbors]]) -> void
    def initialize: (cells: Array[Array[CellWithNeighbors]]) -> void

    # @rbs (position: Position) -> void
    def reveal_cell: (position: Position) -> void

    # @rbs (position: Position) -> void
    def toggle_flag: (position: Position) -> void

    # @rbs () -> Integer
    def count_revealed_cell: () -> Integer

    # @rbs () -> bool
    def bombed?: () -> bool

    # @rbs () -> Integer
    def width: () -> Integer

    # @rbs () -> Integer
    def height: () -> Integer

    # TODO: 別クラスに実装する
    # @rbs () -> void
    def display: () -> void

    # @rbs () -> Array[Hash[Symbol, untyped]]
    def to_a: () -> Array[Hash[Symbol, untyped]]

    extend Base::ClassMethods

    private

    # @rbs () -> Integer
    def count_empty_cell: () -> Integer
  end
end
